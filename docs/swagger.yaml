basePath: /api/v1
definitions:
  models.CreateUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.ErrorModel:
    properties:
      error:
        type: string
    type: object
  models.Message:
    properties:
      message:
        type: string
    type: object
  models.RefreshTokenModel:
    properties:
      refresh_token:
        type: string
    type: object
  models.ResponseToken:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.UserModel:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  models.UpdateUser:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: A Tag service API in golang using gin
  title: GRUD API
  version: 1.0v
paths:
  /auth/auth-me:
    get:
      consumes:
      - application/json
      description: Auth me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Auth me
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseToken'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Login user
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh Token
      parameters:
      - description: Refresh token
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseToken'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Refresh Token
      tags:
      - auth
  /auth/registration:
    post:
      consumes:
      - application/json
      description: Registration user
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseToken'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Registration user
      tags:
      - auth
  /users/:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create new user record in Library
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Create new user record in Library
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user record by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Delete user record by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Return user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Return user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Update user details
      tags:
      - users
  /users/password/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user record by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorModel'
      summary: Delete user record by id
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
